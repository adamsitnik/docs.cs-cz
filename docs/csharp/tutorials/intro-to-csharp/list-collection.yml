### YamlMime:Tutorial
title: <span data-ttu-id="4058d-101">Naučte se spravovat kolekce dat pomocí obecného typu seznamu.</span><span class="sxs-lookup"><span data-stu-id="4058d-101">Learn to manage data collections using the generic list type</span></span>
metadata:
  title: Kolekce dat – Úvod k C# interaktivnímu kurzu
  description: V tomto kurzu použijete prohlížeč pro interaktivní informace C# . Napíšete C# kód a zobrazíte výsledky kompilace a spuštění kódu přímo v prohlížeči.
  audience: Developer
  ms.custom: mvc
  ms.date: 10/23/2018
  level: Beginner
  displayType: two-column
  interactive: csharp
  ms.openlocfilehash: fb08cef284a016dd65c99a1efb0a661624a731f1
  ms.sourcegitcommit: dfd612ba454ce775a766bcc6fe93bc1d43dfda47
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 10/09/2019
  ms.locfileid: "72179011"
items:
- durationInMinutes: 1
  content: >
    <span data-ttu-id="4058d-105">V tomto kurzu se interaktivně C# naučíte používat prohlížeč k psaní C# kódu a zobrazení výsledků kompilace a spuštění kódu.</span><span class="sxs-lookup"><span data-stu-id="4058d-105">This tutorial teaches you C# interactively, using your browser to write C# code and see the results of compiling and running your code.</span></span> <span data-ttu-id="4058d-106">Obsahuje řadu lekcí, které vytvářejí, upravují a prozkoumávat kolekce a pole.</span><span class="sxs-lookup"><span data-stu-id="4058d-106">It contains a series of lessons that create, modify, and explore collections and arrays.</span></span>
- title: <span data-ttu-id="4058d-107">Vytváření seznamů</span><span class="sxs-lookup"><span data-stu-id="4058d-107">Create lists</span></span>
  durationInMinutes: 2
  content: >
    <span data-ttu-id="4058d-108">Spusťte následující kód v interaktivním okně.</span><span class="sxs-lookup"><span data-stu-id="4058d-108">Run the following code in the interactive window.</span></span> <span data-ttu-id="4058d-109">Uděláte to tak, že do interaktivního okna zadáte následující blok kódu (nahraďte `<name>` názvem) a kliknete na tlačítko **Spustit** :</span><span class="sxs-lookup"><span data-stu-id="4058d-109">To do that, type the following code block in the interactive window (replace `<name>` with your name) and click the **Run** button:</span></span>


    ```csharp

    var names = new List<string> { "<name>", "Ana", "Felipe" };

    foreach (var name in names)

    {
      Console.WriteLine($"Hello {name.ToUpper()}!");
    }

    ```


    <span data-ttu-id="4058d-110">Pokud ve svém prostředí používáte, měli byste místo toho postupovat podle pokynů pro [místní verzi](arrays-and-collections.md) .</span><span class="sxs-lookup"><span data-stu-id="4058d-110">If you are running this on your environment, you should follow the instructions for the [local version](arrays-and-collections.md) instead.</span></span>


    <span data-ttu-id="4058d-111">Vytvořili jste seznam řetězců, Přidali jste do tohoto seznamu tři názvy a vytiskli jste názvy všech velkých písmen.</span><span class="sxs-lookup"><span data-stu-id="4058d-111">You've created a list of strings, added three names to that list, and printed out the names in all CAPS.</span></span> <span data-ttu-id="4058d-112">Pomocí konceptů, které jste se naučili v předchozích kurzech, Projděte seznam.</span><span class="sxs-lookup"><span data-stu-id="4058d-112">You're using concepts that you've learned in earlier tutorials to loop through the list.</span></span>


    <span data-ttu-id="4058d-113">Kód pro zobrazení názvů využívá funkci [interpolace řetězce](../../language-reference/tokens/interpolated.md) .</span><span class="sxs-lookup"><span data-stu-id="4058d-113">The code to display names makes use of the [string interpolation](../../language-reference/tokens/interpolated.md) feature.</span></span> <span data-ttu-id="4058d-114">Pokud předcházíte `string` s znakem `$`, můžete vložit C# kód do deklarace řetězce.</span><span class="sxs-lookup"><span data-stu-id="4058d-114">When you precede a `string` with the `$` character, you can embed C# code in the string declaration.</span></span> <span data-ttu-id="4058d-115">Skutečný řetězec nahradí tento C# kód hodnotou, kterou generuje.</span><span class="sxs-lookup"><span data-stu-id="4058d-115">The actual string replaces that C# code with the value it generates.</span></span> <span data-ttu-id="4058d-116">V tomto příkladu nahrazuje `{name.ToUpper()}` s každým názvem převedenými na velká písmena, protože jste volali metodu <xref:System.String.ToUpper%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4058d-116">In this example, it replaces the `{name.ToUpper()}` with each name, converted to capital letters, because you called the <xref:System.String.ToUpper%2A?displayProperty=nameWithType> method.</span></span>


    <span data-ttu-id="4058d-117">Pojďme si to prozkoumat.</span><span class="sxs-lookup"><span data-stu-id="4058d-117">Let's keep exploring.</span></span>


    > [!NOTE]

    > <span data-ttu-id="4058d-118">Toto online prostředí kódování je v režimu náhledu.</span><span class="sxs-lookup"><span data-stu-id="4058d-118">This online coding experience is in preview mode.</span></span> <span data-ttu-id="4058d-119">Pokud narazíte na problémy, nahlaste je [v úložišti dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="4058d-119">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="4058d-120">Upravit obsah seznamu</span><span class="sxs-lookup"><span data-stu-id="4058d-120">Modify list contents</span></span>
  durationInMinutes: 3
  content: >
    <span data-ttu-id="4058d-121">Kolekce, kterou jste vytvořili, používá typ <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="4058d-121">The collection you created uses the <xref:System.Collections.Generic.List%601> type.</span></span> <span data-ttu-id="4058d-122">Tento typ ukládá sekvence prvků.</span><span class="sxs-lookup"><span data-stu-id="4058d-122">This type stores sequences of elements.</span></span> <span data-ttu-id="4058d-123">Zadejte typ prvků mezi lomenými závorkami.</span><span class="sxs-lookup"><span data-stu-id="4058d-123">You specify the type of the elements between the angle brackets.</span></span>


    <span data-ttu-id="4058d-124">Jedním z důležitých aspektů tohoto typu <xref:System.Collections.Generic.List%601> je to, že se může zvětšovat nebo zmenšovat, což umožňuje přidat nebo odebrat prvky.</span><span class="sxs-lookup"><span data-stu-id="4058d-124">One important aspect of this <xref:System.Collections.Generic.List%601> type is that it can grow or shrink, enabling you to add or remove elements.</span></span> <span data-ttu-id="4058d-125">Výsledky můžete zobrazit úpravou obsahu po zobrazení jeho obsahu.</span><span class="sxs-lookup"><span data-stu-id="4058d-125">You can see the results by modifying the contents after you've displayed its contents.</span></span> <span data-ttu-id="4058d-126">Pod kód, který jste už napsali, přidejte následující kód (pod smyčkou, která obsah vytiskne):</span><span class="sxs-lookup"><span data-stu-id="4058d-126">Add the following code below the code you've already written (below the loop that prints the contents):</span></span>


    ```csharp

    Console.WriteLine();

    names.Add("Maria");

    names.Add("Bill");

    names.Remove("Ana");

    foreach (var name in names)

    {
      Console.WriteLine($"Hello {name.ToUpper()}!");
    }

    ```


    <span data-ttu-id="4058d-127">Přidali jste dva další názvy na konec seznamu.</span><span class="sxs-lookup"><span data-stu-id="4058d-127">You've added two more names to the end of the list.</span></span> <span data-ttu-id="4058d-128">Také jste odebrali i jednu z nich.</span><span class="sxs-lookup"><span data-stu-id="4058d-128">You've also removed one as well.</span></span> <span data-ttu-id="4058d-129">Výstup z tohoto bloku kódu ukazuje počáteční obsah a pak vytiskne prázdný řádek a nový obsah.</span><span class="sxs-lookup"><span data-stu-id="4058d-129">The output from this block of code shows the initial contents, then prints a blank line and the new contents.</span></span>


    <span data-ttu-id="4058d-130">@No__t-0 umožňuje odkazovat také na jednotlivé položky podle **indexu** .</span><span class="sxs-lookup"><span data-stu-id="4058d-130">The <xref:System.Collections.Generic.List%601> enables you to reference individual items by **index** as well.</span></span> <span data-ttu-id="4058d-131">K položkám přistupujete pomocí `[` a tokenů `]`.</span><span class="sxs-lookup"><span data-stu-id="4058d-131">You access items using the `[` and `]` tokens.</span></span> <span data-ttu-id="4058d-132">Níže vložte následující kód, který jste už napsali, a zkuste to:</span><span class="sxs-lookup"><span data-stu-id="4058d-132">Add the following code below what you've already written and try it:</span></span>


    ```csharp

    Console.WriteLine($"My name is {names[0]}.");

    Console.WriteLine($"I've added {names[2]} and {names[3]} to the list.");

    ```


    <span data-ttu-id="4058d-133">Nemáte oprávnění k přístupu za konec seznamu.</span><span class="sxs-lookup"><span data-stu-id="4058d-133">You're not allowed to access past the end of the list.</span></span> <span data-ttu-id="4058d-134">Můžete zjistit, jak dlouho seznam používá vlastnost <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="4058d-134">You can check how long the list is using the <xref:System.Collections.Generic.List%601.Count%2A> property.</span></span> <span data-ttu-id="4058d-135">Přidejte následující kód, který si ho můžete vyzkoušet:</span><span class="sxs-lookup"><span data-stu-id="4058d-135">Add the following code to try it:</span></span>


    ```csharp

    Console.WriteLine($"The list has {names.Count} people in it");

    ```


    <span data-ttu-id="4058d-136">Kliknutím na tlačítko **Spustit** znovu zobrazíte výsledky.</span><span class="sxs-lookup"><span data-stu-id="4058d-136">Click **Run** again to see the results.</span></span> <span data-ttu-id="4058d-137">V C#se indexy začínají na 0, takže největší platný index je jeden menší než počet položek v seznamu.</span><span class="sxs-lookup"><span data-stu-id="4058d-137">In C#, indices start at 0, so the largest valid index is one less than the number of items in the list.</span></span>


    > [!NOTE]

    > <span data-ttu-id="4058d-138">Toto online prostředí kódování je v režimu náhledu.</span><span class="sxs-lookup"><span data-stu-id="4058d-138">This online coding experience is in preview mode.</span></span> <span data-ttu-id="4058d-139">Pokud narazíte na problémy, nahlaste je [v úložišti dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="4058d-139">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="4058d-140">Hledání a řazení seznamů</span><span class="sxs-lookup"><span data-stu-id="4058d-140">Search and sort lists</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="4058d-141">Naše ukázky používají relativně malé seznamy, ale vaše aplikace často můžou vytvářet seznamy s mnoha více prvky, někdy se číslování v tisících.</span><span class="sxs-lookup"><span data-stu-id="4058d-141">Our samples use relatively small lists, but your applications may often create lists with many more elements, sometimes numbering in the thousands.</span></span> <span data-ttu-id="4058d-142">Chcete-li najít prvky v těchto větších kolekcích, je nutné hledat v seznamu různé položky.</span><span class="sxs-lookup"><span data-stu-id="4058d-142">To find elements in these larger collections, you need to search the list for different items.</span></span> <span data-ttu-id="4058d-143">Metoda <xref:System.Collections.Generic.List%601.IndexOf%2A> hledá položku a vrátí index položky.</span><span class="sxs-lookup"><span data-stu-id="4058d-143">The <xref:System.Collections.Generic.List%601.IndexOf%2A> method searches for an item and returns the index of the item.</span></span> <span data-ttu-id="4058d-144">Zkuste zjistit, jak to funguje.</span><span class="sxs-lookup"><span data-stu-id="4058d-144">Try it to see how it works.</span></span>  <span data-ttu-id="4058d-145">Pod to, co jste napsali, přidejte následující kód:</span><span class="sxs-lookup"><span data-stu-id="4058d-145">Add the following code below what you've written so far:</span></span>


    ```csharp

    var index = names.IndexOf("Felipe");

    if (index != -1)
      Console.WriteLine($"The name {names[index]} is at index {index}");

    var notFound = names.IndexOf("Not Found");
      Console.WriteLine($"When an item is not found, IndexOf returns {notFound}");
    ```


    <span data-ttu-id="4058d-146">Nesmíte zjistit, jestli je položka v seznamu, takže byste měli vždycky kontrolovat index vrácený <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="4058d-146">You may not know if an item is in the list, so you should always check the index returned by <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span></span> <span data-ttu-id="4058d-147">Pokud je-1, položka nebyla nalezena.</span><span class="sxs-lookup"><span data-stu-id="4058d-147">If it is -1, the item was not found.</span></span>


    <span data-ttu-id="4058d-148">Položky v seznamu lze seřadit také.</span><span class="sxs-lookup"><span data-stu-id="4058d-148">The items in your list can be sorted as well.</span></span> <span data-ttu-id="4058d-149">Metoda <xref:System.Collections.Generic.List%601.Sort%2A> seřadí všechny položky v seznamu v normálním pořadí (abecedně v případě řetězců).</span><span class="sxs-lookup"><span data-stu-id="4058d-149">The <xref:System.Collections.Generic.List%601.Sort%2A> method sorts all the items in the list in their normal order (alphabetically in the case of strings).</span></span> <span data-ttu-id="4058d-150">Přidejte tento kód a spusťte ho znovu:</span><span class="sxs-lookup"><span data-stu-id="4058d-150">Add this code and run again:</span></span>


    ```csharp

    names.Sort();

    foreach (var name in names)

    {
      Console.WriteLine($"Hello {name.ToUpper()}!");
    }

    ```


    > [!NOTE]

    > <span data-ttu-id="4058d-151">Toto online prostředí kódování je v režimu náhledu.</span><span class="sxs-lookup"><span data-stu-id="4058d-151">This online coding experience is in preview mode.</span></span> <span data-ttu-id="4058d-152">Pokud narazíte na problémy, nahlaste je [v úložišti dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="4058d-152">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="4058d-153">Seznamy dalších typů</span><span class="sxs-lookup"><span data-stu-id="4058d-153">Lists of other types</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="4058d-154">V seznamu zatím jste používali typ `string`.</span><span class="sxs-lookup"><span data-stu-id="4058d-154">You've been using the `string` type in lists so far.</span></span> <span data-ttu-id="4058d-155">Pojďme udělat <xref:System.Collections.Generic.List%601> s použitím jiného typu.</span><span class="sxs-lookup"><span data-stu-id="4058d-155">Let's make a <xref:System.Collections.Generic.List%601> using a different type.</span></span> <span data-ttu-id="4058d-156">Pojďme sestavit sadu čísel.</span><span class="sxs-lookup"><span data-stu-id="4058d-156">Let's build a set of numbers.</span></span> <span data-ttu-id="4058d-157">Odstraňte kód, který jste dosud napsali, a nahraďte ho následujícím kódem:</span><span class="sxs-lookup"><span data-stu-id="4058d-157">Delete the code you wrote so far, and replace it with the following code:</span></span>


    ```csharp

    var fibonacciNumbers = new List<int> {1, 1};

    ```


    <span data-ttu-id="4058d-158">Vytvoří seznam celých čísel a nastaví první dvě celá čísla na hodnotu 1.</span><span class="sxs-lookup"><span data-stu-id="4058d-158">That creates a list of integers, and sets the first two integers to the value 1.</span></span> <span data-ttu-id="4058d-159">*Sekvence Fibonacci sekvence*čísel začíná dvěma 1.</span><span class="sxs-lookup"><span data-stu-id="4058d-159">The *Fibonacci Sequence*, a sequence of numbers, starts with two 1s.</span></span> <span data-ttu-id="4058d-160">Každé další Fibonacci číslo se zjistí tak, že se vybere součet předchozích dvou čísel.</span><span class="sxs-lookup"><span data-stu-id="4058d-160">Each next Fibonacci number is found by taking the sum of the previous two numbers.</span></span> <span data-ttu-id="4058d-161">Přidejte tento kód:</span><span class="sxs-lookup"><span data-stu-id="4058d-161">Add this code:</span></span>


    ```csharp

    var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];

    var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];


    fibonacciNumbers.Add(previous + previous2);


    foreach(var item in fibonacciNumbers)
        Console.WriteLine(item);
    ```


    <span data-ttu-id="4058d-162">Výsledky zobrazíte stisknutím klávesy **Run** .</span><span class="sxs-lookup"><span data-stu-id="4058d-162">Press **Run** to see the results;</span></span>


    > [!NOTE]

    > <span data-ttu-id="4058d-163">Toto online prostředí kódování je v režimu náhledu.</span><span class="sxs-lookup"><span data-stu-id="4058d-163">This online coding experience is in preview mode.</span></span> <span data-ttu-id="4058d-164">Pokud narazíte na problémy, nahlaste je [v úložišti dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="4058d-164">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="4058d-165">Výzev</span><span class="sxs-lookup"><span data-stu-id="4058d-165">Challenge</span></span>
  durationInMinutes: 10
  content: >
    <span data-ttu-id="4058d-166">Podívejte se, jestli můžete některé z konceptů spojit z tohoto a předchozích lekcí.</span><span class="sxs-lookup"><span data-stu-id="4058d-166">See if you can put together some of the concepts from this and earlier lessons.</span></span> <span data-ttu-id="4058d-167">Rozhlaste se podle toho, co jste zatím vytvořili s Fibonacci čísly.</span><span class="sxs-lookup"><span data-stu-id="4058d-167">Expand on what you've built so far with Fibonacci Numbers.</span></span> <span data-ttu-id="4058d-168">Zkuste a napište kód, který vygeneruje prvních 20 čísel v sekvenci.</span><span class="sxs-lookup"><span data-stu-id="4058d-168">Try and write the code to generate the first 20 numbers in the sequence.</span></span> <span data-ttu-id="4058d-169">(Jako pomocný parametr se jedná o 20 Fibonacci číslo 6765.)</span><span class="sxs-lookup"><span data-stu-id="4058d-169">(As a hint, the 20th Fibonacci number is 6765.)</span></span>


    > [!NOTE]

    > <span data-ttu-id="4058d-170">Toto online prostředí kódování je v režimu náhledu.</span><span class="sxs-lookup"><span data-stu-id="4058d-170">This online coding experience is in preview mode.</span></span> <span data-ttu-id="4058d-171">Pokud narazíte na problémy, nahlaste je [v úložišti dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="4058d-171">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="4058d-172">Dokončení výzvy</span><span class="sxs-lookup"><span data-stu-id="4058d-172">Complete challenge</span></span>
  durationInMinutes: 3
  content: >
    <span data-ttu-id="4058d-173">Pracovali jste s podobným způsobem?</span><span class="sxs-lookup"><span data-stu-id="4058d-173">Did you come up with something like this?</span></span>


    ```csharp

    var fibonacciNumbers = new List<int> {1, 1};


    while (fibonacciNumbers.Count < 20)

    {
        var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];
        var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];

        fibonacciNumbers.Add(previous + previous2);
    }

    foreach(var item in fibonacciNumbers)
        Console.WriteLine(item);
    ```


    <span data-ttu-id="4058d-174">V každé iteraci smyčky přebíráte poslední dvě celá čísla v seznamu, sečtete je a přidáte tuto hodnotu do seznamu.</span><span class="sxs-lookup"><span data-stu-id="4058d-174">With each iteration of the loop, you're taking the last two integers in the list, summing them, and adding that value to the list.</span></span> <span data-ttu-id="4058d-175">Smyčka se opakuje, dokud do seznamu nepřidáte 20 položek.</span><span class="sxs-lookup"><span data-stu-id="4058d-175">The loop repeats until you've added 20 items to the list.</span></span>


    > [!NOTE]

    > <span data-ttu-id="4058d-176">Toto online prostředí kódování je v režimu náhledu.</span><span class="sxs-lookup"><span data-stu-id="4058d-176">This online coding experience is in preview mode.</span></span> <span data-ttu-id="4058d-177">Pokud narazíte na problémy, nahlaste je [v úložišti dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="4058d-177">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- content: >-
    <span data-ttu-id="4058d-178">Dokončili jste kurz interaktivního seznamu.</span><span class="sxs-lookup"><span data-stu-id="4058d-178">You've completed the list interactive tutorial.</span></span> <span data-ttu-id="4058d-179">To je finální Úvod k C# interaktivnímu kurzu.</span><span class="sxs-lookup"><span data-stu-id="4058d-179">That's the final introduction to C# interactive tutorial.</span></span> <span data-ttu-id="4058d-180">Můžete navštívit [Web .NET](https://dotnet.microsoft.com/learn/dotnet/hello-world-tutorial/intro) a stáhnout .NET Core SDK, vytvořit projekt na svém počítači a zachovat kódování.</span><span class="sxs-lookup"><span data-stu-id="4058d-180">You can visit the [.NET site](https://dotnet.microsoft.com/learn/dotnet/hello-world-tutorial/intro) to download the .NET Core SDK, create a project on your machine, and keep coding.</span></span> <span data-ttu-id="4058d-181">Oddíl "další kroky" vás převede zpět na tyto kurzy.</span><span class="sxs-lookup"><span data-stu-id="4058d-181">The "Next steps" section brings you back to these tutorials.</span></span>


    <span data-ttu-id="4058d-182">Další informace o [kolekcích .NET](../../../standard/collections/index.md) najdete v následujících článcích:</span><span class="sxs-lookup"><span data-stu-id="4058d-182">You can learn more about [.NET collections](../../../standard/collections/index.md) in the following articles:</span></span>

    - [<span data-ttu-id="4058d-183">Výběr typu kolekce</span><span class="sxs-lookup"><span data-stu-id="4058d-183">Selecting a collection type</span></span>](../../../standard/collections/selecting-a-collection-class.md)

    - [<span data-ttu-id="4058d-184">Běžně používané typy kolekcí</span><span class="sxs-lookup"><span data-stu-id="4058d-184">Commonly used collection types</span></span>](../../../standard/collections/commonly-used-collection-types.md)

    - [<span data-ttu-id="4058d-185">Kdy použít obecné kolekce</span><span class="sxs-lookup"><span data-stu-id="4058d-185">When to use generic collections</span></span>](../../../standard/collections/when-to-use-generic-collections.md)
