### YamlMime:Tutorial
title: <span data-ttu-id="d88ad-101">Naučte se spravovat kolekce dat pomocí obecného typu seznamu.</span><span class="sxs-lookup"><span data-stu-id="d88ad-101">Learn to manage data collections using the generic list type</span></span>
metadata:
  title: Kolekce dat – Úvod k C# interaktivnímu kurzu
  description: V tomto kurzu použijete prohlížeč pro interaktivní informace C# . Napíšete C# kód a zobrazíte výsledky kompilace a spuštění kódu přímo v prohlížeči.
  audience: Developer
  ms.custom: mvc
  ms.date: 10/23/2018
  level: Beginner
  displayType: two-column
  interactive: csharp
  ms.openlocfilehash: 6dfbbbb6ef64b3dbb83d15ba66860acb7c5b3585
  ms.sourcegitcommit: 205b9a204742e9c77256d43ac9d94c3f82909808
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 09/10/2019
  ms.locfileid: "70850738"
items:
- durationInMinutes: 1
  content: >
    <span data-ttu-id="d88ad-105">V tomto kurzu se interaktivně C# naučíte používat prohlížeč k psaní C# kódu a zobrazení výsledků kompilace a spuštění kódu.</span><span class="sxs-lookup"><span data-stu-id="d88ad-105">This tutorial teaches you C# interactively, using your browser to write C# code and see the results of compiling and running your code.</span></span> <span data-ttu-id="d88ad-106">Obsahuje řadu lekcí, které vytvářejí, upravují a prozkoumávat kolekce a pole.</span><span class="sxs-lookup"><span data-stu-id="d88ad-106">It contains a series of lessons that create, modify, and explore collections and arrays.</span></span>
- title: <span data-ttu-id="d88ad-107">Vytváření seznamů</span><span class="sxs-lookup"><span data-stu-id="d88ad-107">Create lists</span></span>
  durationInMinutes: 2
  content: >
    <span data-ttu-id="d88ad-108">Spusťte následující kód v interaktivním okně.</span><span class="sxs-lookup"><span data-stu-id="d88ad-108">Run the following code in the interactive window.</span></span> <span data-ttu-id="d88ad-109">Uděláte to tak, že do interaktivního okna zadáte následující blok kódu ( `<name>` nahraďte ho názvem) a kliknete na tlačítko **Spustit** :</span><span class="sxs-lookup"><span data-stu-id="d88ad-109">To do that, type the following code block in the interactive window (replace `<name>` with your name) and click the **Run** button:</span></span>


    ```csharp

    var names = new List<string> { "<name>", "Ana", "Felipe" };

    foreach (var name in names)

    {
      Console.WriteLine($"Hello {name.ToUpper()}!");
    }

    ```


    <span data-ttu-id="d88ad-110">Vytvořili jste seznam řetězců, Přidali jste do tohoto seznamu tři názvy a vytiskli jste názvy všech velkých písmen.</span><span class="sxs-lookup"><span data-stu-id="d88ad-110">You've created a list of strings, added three names to that list, and printed out the names in all CAPS.</span></span> <span data-ttu-id="d88ad-111">Pomocí konceptů, které jste se naučili v předchozích kurzech, Projděte seznam.</span><span class="sxs-lookup"><span data-stu-id="d88ad-111">You're using concepts that you've learned in earlier tutorials to loop through the list.</span></span>


    <span data-ttu-id="d88ad-112">Kód pro zobrazení názvů využívá funkci [interpolace řetězce](../../language-reference/tokens/interpolated.md) .</span><span class="sxs-lookup"><span data-stu-id="d88ad-112">The code to display names makes use of the [string interpolation](../../language-reference/tokens/interpolated.md) feature.</span></span> <span data-ttu-id="d88ad-113">Pokud předcházíte `string` `$` znak, můžete vložit C# kód do deklarace řetězce.</span><span class="sxs-lookup"><span data-stu-id="d88ad-113">When you precede a `string` with the `$` character, you can embed C# code in the string declaration.</span></span> <span data-ttu-id="d88ad-114">Skutečný řetězec nahradí tento C# kód hodnotou, kterou generuje.</span><span class="sxs-lookup"><span data-stu-id="d88ad-114">The actual string replaces that C# code with the value it generates.</span></span> <span data-ttu-id="d88ad-115">V tomto příkladu nahrazuje `{name.ToUpper()}` název s každým názvem převedenými na velká písmena, protože jste <xref:System.String.ToUpper%2A?displayProperty=nameWithType> volali metodu.</span><span class="sxs-lookup"><span data-stu-id="d88ad-115">In this example, it replaces the `{name.ToUpper()}` with each name, converted to capital letters, because you called the <xref:System.String.ToUpper%2A?displayProperty=nameWithType> method.</span></span>


    <span data-ttu-id="d88ad-116">Pojďme si to prozkoumat.</span><span class="sxs-lookup"><span data-stu-id="d88ad-116">Let's keep exploring.</span></span>


    > [!NOTE]

    > <span data-ttu-id="d88ad-117">Toto online prostředí kódování je v režimu náhledu.</span><span class="sxs-lookup"><span data-stu-id="d88ad-117">This online coding experience is in preview mode.</span></span> <span data-ttu-id="d88ad-118">Pokud narazíte na problémy, nahlaste je [v úložišti dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="d88ad-118">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="d88ad-119">Upravit obsah seznamu</span><span class="sxs-lookup"><span data-stu-id="d88ad-119">Modify list contents</span></span>
  durationInMinutes: 3
  content: >
    <span data-ttu-id="d88ad-120">Kolekce, kterou jste vytvořili, <xref:System.Collections.Generic.List%601> používá typ.</span><span class="sxs-lookup"><span data-stu-id="d88ad-120">The collection you created uses the <xref:System.Collections.Generic.List%601> type.</span></span> <span data-ttu-id="d88ad-121">Tento typ ukládá sekvence prvků.</span><span class="sxs-lookup"><span data-stu-id="d88ad-121">This type stores sequences of elements.</span></span> <span data-ttu-id="d88ad-122">Zadejte typ prvků mezi lomenými závorkami.</span><span class="sxs-lookup"><span data-stu-id="d88ad-122">You specify the type of the elements between the angle brackets.</span></span>


    <span data-ttu-id="d88ad-123">Jedním z důležitých aspektů <xref:System.Collections.Generic.List%601> tohoto typu je, že může být zvětšen nebo zmenšen, což umožňuje přidat nebo odebrat prvky.</span><span class="sxs-lookup"><span data-stu-id="d88ad-123">One important aspect of this <xref:System.Collections.Generic.List%601> type is that it can grow or shrink, enabling you to add or remove elements.</span></span> <span data-ttu-id="d88ad-124">Výsledky můžete zobrazit úpravou obsahu po zobrazení jeho obsahu.</span><span class="sxs-lookup"><span data-stu-id="d88ad-124">You can see the results by modifying the contents after you've displayed its contents.</span></span> <span data-ttu-id="d88ad-125">Pod kód, který jste už napsali, přidejte následující kód (pod smyčkou, která obsah vytiskne):</span><span class="sxs-lookup"><span data-stu-id="d88ad-125">Add the following code below the code you've already written (below the loop that prints the contents):</span></span>


    ```csharp

    Console.WriteLine();

    names.Add("Maria");

    names.Add("Bill");

    names.Remove("Ana");

    foreach (var name in names)

    {
      Console.WriteLine($"Hello {name.ToUpper()}!");
    }

    ```


    <span data-ttu-id="d88ad-126">Přidali jste dva další názvy na konec seznamu.</span><span class="sxs-lookup"><span data-stu-id="d88ad-126">You've added two more names to the end of the list.</span></span> <span data-ttu-id="d88ad-127">Také jste odebrali i jednu z nich.</span><span class="sxs-lookup"><span data-stu-id="d88ad-127">You've also removed one as well.</span></span> <span data-ttu-id="d88ad-128">Výstup z tohoto bloku kódu ukazuje počáteční obsah a pak vytiskne prázdný řádek a nový obsah.</span><span class="sxs-lookup"><span data-stu-id="d88ad-128">The output from this block of code shows the initial contents, then prints a blank line and the new contents.</span></span>


    <span data-ttu-id="d88ad-129">Umožňuje také odkazovat na jednotlivé položky podle **indexu.** <xref:System.Collections.Generic.List%601></span><span class="sxs-lookup"><span data-stu-id="d88ad-129">The <xref:System.Collections.Generic.List%601> enables you to reference individual items by **index** as well.</span></span> <span data-ttu-id="d88ad-130">Přistupujete k položkám `]` pomocí `[` tokenů a.</span><span class="sxs-lookup"><span data-stu-id="d88ad-130">You access items using the `[` and `]` tokens.</span></span> <span data-ttu-id="d88ad-131">Níže vložte následující kód, který jste už napsali, a zkuste to:</span><span class="sxs-lookup"><span data-stu-id="d88ad-131">Add the following code below what you've already written and try it:</span></span>


    ```csharp

    Console.WriteLine($"My name is {names[0]}.");

    Console.WriteLine($"I've added {names[2]} and {names[3]} to the list.");

    ```


    <span data-ttu-id="d88ad-132">Nemáte oprávnění k přístupu za konec seznamu.</span><span class="sxs-lookup"><span data-stu-id="d88ad-132">You're not allowed to access past the end of the list.</span></span> <span data-ttu-id="d88ad-133">Můžete zjistit, jak dlouho seznam používá <xref:System.Collections.Generic.List%601.Count%2A> vlastnost.</span><span class="sxs-lookup"><span data-stu-id="d88ad-133">You can check how long the list is using the <xref:System.Collections.Generic.List%601.Count%2A> property.</span></span> <span data-ttu-id="d88ad-134">Přidejte následující kód, který si ho můžete vyzkoušet:</span><span class="sxs-lookup"><span data-stu-id="d88ad-134">Add the following code to try it:</span></span>


    ```csharp

    Console.WriteLine($"The list has {names.Count} people in it");

    ```


    <span data-ttu-id="d88ad-135">Kliknutím na tlačítko **Spustit** znovu zobrazíte výsledky.</span><span class="sxs-lookup"><span data-stu-id="d88ad-135">Click **Run** again to see the results.</span></span> <span data-ttu-id="d88ad-136">V C#se indexy začínají na 0, takže největší platný index je jeden menší než počet položek v seznamu.</span><span class="sxs-lookup"><span data-stu-id="d88ad-136">In C#, indices start at 0, so the largest valid index is one less than the number of items in the list.</span></span>


    > [!NOTE]

    > <span data-ttu-id="d88ad-137">Toto online prostředí kódování je v režimu náhledu.</span><span class="sxs-lookup"><span data-stu-id="d88ad-137">This online coding experience is in preview mode.</span></span> <span data-ttu-id="d88ad-138">Pokud narazíte na problémy, nahlaste je [v úložišti dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="d88ad-138">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="d88ad-139">Hledání a řazení seznamů</span><span class="sxs-lookup"><span data-stu-id="d88ad-139">Search and sort lists</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="d88ad-140">Naše ukázky používají relativně malé seznamy, ale vaše aplikace často můžou vytvářet seznamy s mnoha více prvky, někdy se číslování v tisících.</span><span class="sxs-lookup"><span data-stu-id="d88ad-140">Our samples use relatively small lists, but your applications may often create lists with many more elements, sometimes numbering in the thousands.</span></span> <span data-ttu-id="d88ad-141">Chcete-li najít prvky v těchto větších kolekcích, je nutné hledat v seznamu různé položky.</span><span class="sxs-lookup"><span data-stu-id="d88ad-141">To find elements in these larger collections, you need to search the list for different items.</span></span> <span data-ttu-id="d88ad-142"><xref:System.Collections.Generic.List%601.IndexOf%2A> Metoda vyhledá položku a vrátí index položky.</span><span class="sxs-lookup"><span data-stu-id="d88ad-142">The <xref:System.Collections.Generic.List%601.IndexOf%2A> method searches for an item and returns the index of the item.</span></span> <span data-ttu-id="d88ad-143">Zkuste zjistit, jak to funguje.</span><span class="sxs-lookup"><span data-stu-id="d88ad-143">Try it to see how it works.</span></span>  <span data-ttu-id="d88ad-144">Pod to, co jste napsali, přidejte následující kód:</span><span class="sxs-lookup"><span data-stu-id="d88ad-144">Add the following code below what you've written so far:</span></span>


    ```csharp

    var index = names.IndexOf("Felipe");

    if (index != -1)
      Console.WriteLine($"The name {names[index]} is at index {index}");

    var notFound = names.IndexOf("Not Found");
      Console.WriteLine($"When an item is not found, IndexOf returns {notFound}");
    ```


    <span data-ttu-id="d88ad-145">Nesmíte zjistit, jestli je položka v seznamu, takže byste měli vždycky kontrolovat index vrácený funkcí <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="d88ad-145">You may not know if an item is in the list, so you should always check the index returned by <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span></span> <span data-ttu-id="d88ad-146">Pokud je-1, položka nebyla nalezena.</span><span class="sxs-lookup"><span data-stu-id="d88ad-146">If it is -1, the item was not found.</span></span>


    <span data-ttu-id="d88ad-147">Položky v seznamu lze seřadit také.</span><span class="sxs-lookup"><span data-stu-id="d88ad-147">The items in your list can be sorted as well.</span></span> <span data-ttu-id="d88ad-148"><xref:System.Collections.Generic.List%601.Sort%2A> Metoda seřadí všechny položky v seznamu v normálním pořadí (abecedně v případě řetězců).</span><span class="sxs-lookup"><span data-stu-id="d88ad-148">The <xref:System.Collections.Generic.List%601.Sort%2A> method sorts all the items in the list in their normal order (alphabetically in the case of strings).</span></span> <span data-ttu-id="d88ad-149">Přidejte tento kód a spusťte ho znovu:</span><span class="sxs-lookup"><span data-stu-id="d88ad-149">Add this code and run again:</span></span>


    ```csharp

    names.Sort();

    foreach (var name in names)

    {
      Console.WriteLine($"Hello {name.ToUpper()}!");
    }

    ```


    > [!NOTE]

    > <span data-ttu-id="d88ad-150">Toto online prostředí kódování je v režimu náhledu.</span><span class="sxs-lookup"><span data-stu-id="d88ad-150">This online coding experience is in preview mode.</span></span> <span data-ttu-id="d88ad-151">Pokud narazíte na problémy, nahlaste je [v úložišti dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="d88ad-151">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="d88ad-152">Seznamy dalších typů</span><span class="sxs-lookup"><span data-stu-id="d88ad-152">Lists of other types</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="d88ad-153">V seznamu zatím jste používali `string` typ v seznamech.</span><span class="sxs-lookup"><span data-stu-id="d88ad-153">You've been using the `string` type in lists so far.</span></span> <span data-ttu-id="d88ad-154"><xref:System.Collections.Generic.List%601> Pojďme použít jiný typ.</span><span class="sxs-lookup"><span data-stu-id="d88ad-154">Let's make a <xref:System.Collections.Generic.List%601> using a different type.</span></span> <span data-ttu-id="d88ad-155">Pojďme sestavit sadu čísel.</span><span class="sxs-lookup"><span data-stu-id="d88ad-155">Let's build a set of numbers.</span></span> <span data-ttu-id="d88ad-156">Odstraňte kód, který jste dosud napsali, a nahraďte ho následujícím kódem:</span><span class="sxs-lookup"><span data-stu-id="d88ad-156">Delete the code you wrote so far, and replace it with the following code:</span></span>


    ```csharp

    var fibonacciNumbers = new List<int> {1, 1};

    ```


    <span data-ttu-id="d88ad-157">Vytvoří seznam celých čísel a nastaví první dvě celá čísla na hodnotu 1.</span><span class="sxs-lookup"><span data-stu-id="d88ad-157">That creates a list of integers, and sets the first two integers to the value 1.</span></span> <span data-ttu-id="d88ad-158">*Sekvence Fibonacci sekvence*čísel začíná dvěma 1.</span><span class="sxs-lookup"><span data-stu-id="d88ad-158">The *Fibonacci Sequence*, a sequence of numbers, starts with two 1s.</span></span> <span data-ttu-id="d88ad-159">Každé další Fibonacci číslo se zjistí tak, že se vybere součet předchozích dvou čísel.</span><span class="sxs-lookup"><span data-stu-id="d88ad-159">Each next Fibonacci number is found by taking the sum of the previous two numbers.</span></span> <span data-ttu-id="d88ad-160">Přidejte tento kód:</span><span class="sxs-lookup"><span data-stu-id="d88ad-160">Add this code:</span></span>


    ```csharp

    var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];

    var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];


    fibonacciNumbers.Add(previous + previous2);


    foreach(var item in fibonacciNumbers)
        Console.WriteLine(item);
    ```


    <span data-ttu-id="d88ad-161">Výsledky zobrazíte stisknutím klávesy **Run** .</span><span class="sxs-lookup"><span data-stu-id="d88ad-161">Press **Run** to see the results;</span></span>


    > [!NOTE]

    > <span data-ttu-id="d88ad-162">Toto online prostředí kódování je v režimu náhledu.</span><span class="sxs-lookup"><span data-stu-id="d88ad-162">This online coding experience is in preview mode.</span></span> <span data-ttu-id="d88ad-163">Pokud narazíte na problémy, nahlaste je [v úložišti dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="d88ad-163">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="d88ad-164">Výzev</span><span class="sxs-lookup"><span data-stu-id="d88ad-164">Challenge</span></span>
  durationInMinutes: 10
  content: >
    <span data-ttu-id="d88ad-165">Podívejte se, jestli můžete některé z konceptů spojit z tohoto a předchozích lekcí.</span><span class="sxs-lookup"><span data-stu-id="d88ad-165">See if you can put together some of the concepts from this and earlier lessons.</span></span> <span data-ttu-id="d88ad-166">Rozhlaste se podle toho, co jste zatím vytvořili s Fibonacci čísly.</span><span class="sxs-lookup"><span data-stu-id="d88ad-166">Expand on what you've built so far with Fibonacci Numbers.</span></span> <span data-ttu-id="d88ad-167">Zkuste a napište kód, který vygeneruje prvních 20 čísel v sekvenci.</span><span class="sxs-lookup"><span data-stu-id="d88ad-167">Try and write the code to generate the first 20 numbers in the sequence.</span></span> <span data-ttu-id="d88ad-168">(Jako pomocný parametr se jedná o 20 Fibonacci číslo 6765.)</span><span class="sxs-lookup"><span data-stu-id="d88ad-168">(As a hint, the 20th Fibonacci number is 6765.)</span></span>


    > [!NOTE]

    > <span data-ttu-id="d88ad-169">Toto online prostředí kódování je v režimu náhledu.</span><span class="sxs-lookup"><span data-stu-id="d88ad-169">This online coding experience is in preview mode.</span></span> <span data-ttu-id="d88ad-170">Pokud narazíte na problémy, nahlaste je [v úložišti dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="d88ad-170">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="d88ad-171">Dokončení výzvy</span><span class="sxs-lookup"><span data-stu-id="d88ad-171">Complete challenge</span></span>
  durationInMinutes: 3
  content: >
    <span data-ttu-id="d88ad-172">Pracovali jste s podobným způsobem?</span><span class="sxs-lookup"><span data-stu-id="d88ad-172">Did you come up with something like this?</span></span>


    ```csharp

    var fibonacciNumbers = new List<int> {1, 1};


    while (fibonacciNumbers.Count < 20)

    {
        var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];
        var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];

        fibonacciNumbers.Add(previous + previous2);
    }

    foreach(var item in fibonacciNumbers)
        Console.WriteLine(item);
    ```


    <span data-ttu-id="d88ad-173">V každé iteraci smyčky přebíráte poslední dvě celá čísla v seznamu, sečtete je a přidáte tuto hodnotu do seznamu.</span><span class="sxs-lookup"><span data-stu-id="d88ad-173">With each iteration of the loop, you're taking the last two integers in the list, summing them, and adding that value to the list.</span></span> <span data-ttu-id="d88ad-174">Smyčka se opakuje, dokud do seznamu nepřidáte 20 položek.</span><span class="sxs-lookup"><span data-stu-id="d88ad-174">The loop repeats until you've added 20 items to the list.</span></span>


    > [!NOTE]

    > <span data-ttu-id="d88ad-175">Toto online prostředí kódování je v režimu náhledu.</span><span class="sxs-lookup"><span data-stu-id="d88ad-175">This online coding experience is in preview mode.</span></span> <span data-ttu-id="d88ad-176">Pokud narazíte na problémy, nahlaste je [v úložišti dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="d88ad-176">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- content: >-
    <span data-ttu-id="d88ad-177">Dokončili jste kurz interaktivního seznamu.</span><span class="sxs-lookup"><span data-stu-id="d88ad-177">You've completed the list interactive tutorial.</span></span> <span data-ttu-id="d88ad-178">To je finální Úvod k C# interaktivnímu kurzu.</span><span class="sxs-lookup"><span data-stu-id="d88ad-178">That's the final introduction to C# interactive tutorial.</span></span> <span data-ttu-id="d88ad-179">Můžete navštívit [Web .NET](https://dotnet.microsoft.com/learn/dotnet/hello-world-tutorial/intro) a stáhnout .NET Core SDK, vytvořit projekt na svém počítači a zachovat kódování.</span><span class="sxs-lookup"><span data-stu-id="d88ad-179">You can visit the [.NET site](https://dotnet.microsoft.com/learn/dotnet/hello-world-tutorial/intro) to download the .NET Core SDK, create a project on your machine, and keep coding.</span></span> <span data-ttu-id="d88ad-180">Oddíl "další kroky" vás převede zpět na tyto kurzy.</span><span class="sxs-lookup"><span data-stu-id="d88ad-180">The "Next steps" section brings you back to these tutorials.</span></span>


    <span data-ttu-id="d88ad-181">Další informace o [kolekcích .NET](../../../standard/collections/index.md) najdete v následujících článcích:</span><span class="sxs-lookup"><span data-stu-id="d88ad-181">You can learn more about [.NET collections](../../../standard/collections/index.md) in the following articles:</span></span>

    - [<span data-ttu-id="d88ad-182">Výběr typu kolekce</span><span class="sxs-lookup"><span data-stu-id="d88ad-182">Selecting a collection type</span></span>](../../../standard/collections/selecting-a-collection-class.md)

    - [<span data-ttu-id="d88ad-183">Běžně používané typy kolekcí</span><span class="sxs-lookup"><span data-stu-id="d88ad-183">Commonly used collection types</span></span>](../../../standard/collections/commonly-used-collection-types.md)

    - [<span data-ttu-id="d88ad-184">Kdy použít obecné kolekce</span><span class="sxs-lookup"><span data-stu-id="d88ad-184">When to use generic collections</span></span>](../../../standard/collections/when-to-use-generic-collections.md)
